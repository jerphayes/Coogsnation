// File: LoginPage.jsx
import { useState } from "react";
import { Eye, EyeOff, LogIn } from "lucide-react"; // eye icons from lucide-react

export default function LoginPage() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [message, setMessage] = useState("");

  const handleLogin = (e) => {
    e.preventDefault();

    const users = JSON.parse(localStorage.getItem("coogsnationUsers") || "[]");
    const user = users.find(
      (u) =>
        (u.email === email || u.username === email) &&
        u.password === password
    );

    if (!user) {
      setMessage("Invalid email/username or password.");
      return;
    }

    if (user.verified === false) {
      setMessage("Please verify your email before logging in.");
      return;
    }

    localStorage.setItem("currentUser", JSON.stringify(user));
    setMessage("Login successful! Redirecting...");
    setTimeout(() => (window.location.href = "/dashboard"), 1200);
  };

  return (
    <div className="max-w-md mx-auto mt-16 p-6 bg-white border rounded-lg shadow">
      <h2 className="text-2xl font-bold text-center text-red-700 mb-2">
        Welcome Back to CoogsNation
      </h2>
      <p className="text-center text-gray-600 mb-6">
        Log in to access your personalized Coogs dashboard
      </p>

      <form onSubmit={handleLogin} className="flex flex-col gap-4">
        <input
          type="text"
          placeholder="Email or Username"
          className="border p-2 rounded"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />

        <div className="relative">
          <input
            type={showPassword ? "text" : "password"}
            placeholder="Password"
            className="border p-2 rounded w-full pr-10"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
          <button
            type="button"
            onClick={() => setShowPassword(!showPassword)}
            className="absolute inset-y-0 right-3 flex items-center text-gray-500 hover:text-red-600"
          >
            {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}
          </button>
        </div>

        <button
          type="submit"
          className="bg-red-600 text-white py-2 rounded hover:bg-red-700 flex items-center justify-center gap-2"
        >
          <LogIn size={18} /> Log In
        </button>
      </form>

      {message && (
        <p className="text-center mt-3 text-sm text-gray-700">{message}</p>
      )}

      <div className="mt-6 border-t pt-4">
        <p className="text-center text-gray-600 mb-3">Or continue with</p>
        <div className="flex justify-center gap-3">
          <button className="border px-3 py-2 rounded hover:bg-gray-100">
            <img
              src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/google/google-original.svg"
              alt="Google"
              className="w-5 h-5 inline mr-1"
            />
            Google
          </button>
          <button className="border px-3 py-2 rounded hover:bg-gray-100">
            üçé Apple
          </button>
          <button className="border px-3 py-2 rounded hover:bg-gray-100">
            üê¶ X
          </button>
          <button className="border px-3 py-2 rounded hover:bg-gray-100">
            üíº LinkedIn
          </button>
        </div>
      </div>

      <p className="text-center text-sm text-gray-600 mt-6">
        Not a member yet?{" "}
        <a href="/join" className="text-red-600 hover:underline">
          Sign up
        </a>
      </p>
    </div>
  );
}
