import { useState } from "react";

export default function JoinPage() {
  const [handle, setHandle] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [message, setMessage] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();

    // load users list or create empty one
    const users = JSON.parse(localStorage.getItem("coogsnationUsers") || "[]");

    // check if handle or email exists
    if (users.some((u) => u.handle === handle || u.email === email)) {
      setMessage("That username or email already exists!");
      return;
    }

    // create new user object
    const newUser = { handle, email, password };
    users.push(newUser);
    localStorage.setItem("coogsnationUsers", JSON.stringify(users));
    localStorage.setItem("currentUser", JSON.stringify(newUser));

    setMessage("Account created! Redirecting to your dashboard...");
    setTimeout(() => (window.location.href = "/dashboard"), 1500);
  };

  return (
    <div className="max-w-md mx-auto mt-16 p-6 bg-white rounded-lg shadow">
      <h2 className="text-2xl font-bold text-center text-red-700 mb-3">
        Join CoogsNation
      </h2>
      <form onSubmit={handleSubmit} className="flex flex-col gap-4">
        <input
          type="text"
          placeholder="Create a username"
          value={handle}
          onChange={(e) => setHandle(e.target.value)}
          className="border p-2 rounded text-black"
          required
        />
        <input
          type="email"
          placeholder="Your email address"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="border p-2 rounded text-black"
          required
        />
        <input
          type="password"
          placeholder="Create password (min 8 chars, 1 capital, 1 number)"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          pattern="^(?=.*[A-Z])(?=.*\d).{8,}$"
          title="Password must be 8+ chars with one capital letter and one number"
          className="border p-2 rounded text-black"
          required
        />
        <button
          type="submit"
          className="bg-red-600 text-white py-2 rounded hover:bg-red-700"
        >
          Create Account
        </button>
      </form>
      {message && (
        <p className="text-center text-gray-700 mt-3">{message}</p>
      )}
    </div>
  );
}
import { useState } from "react";

export default function LoginPage() {
  const [handle, setHandle] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [message, setMessage] = useState("");

  const handleLogin = (e) => {
    e.preventDefault();

    const users = JSON.parse(localStorage.getItem("coogsnationUsers") || "[]");
    const user = users.find(
      (u) => (u.handle === handle || u.email === handle) && u.password === password
    );

    if (!user) {
      setMessage("Invalid username/email or password");
      return;
    }

    localStorage.setItem("currentUser", JSON.stringify(user));
    setMessage("Welcome back! Redirecting to dashboard...");
    setTimeout(() => (window.location.href = "/dashboard"), 1000);
  };

  return (
    <div className="max-w-md mx-auto mt-20 p-6 bg-white rounded-lg shadow">
      <h2 className="text-2xl font-bold text-center text-red-700 mb-3">
        Welcome to Cougar Connect
      </h2>
      <p className="text-center text-gray-600 mb-6">
        Sign in with your CoogsNation handle or email
      </p>

      <form onSubmit={handleLogin} className="flex flex-col gap-4">
        <input
          type="text"
          placeholder="Enter your handle or email"
          value={handle}
          onChange={(e) => setHandle(e.target.value)}
          className="border p-2 rounded text-black"
          required
        />

        <div className="relative">
          <input
            type={showPassword ? "text" : "password"}
            placeholder="Enter your password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            className="border p-2 rounded w-full text-black pr-10"
            required
          />
          <button
            type="button"
            onClick={() => setShowPassword(!showPassword)}
            className="absolute inset-y-0 right-3 flex items-center text-gray-600"
          >
            {showPassword ? "🙈" : "👁️"}
          </button>
        </div>

        <button
          type="submit"
          className="bg-red-600 text-white py-2 rounded hover:bg-red-700"
        >
          Sign In
        </button>
      </form>

      {message && (
        <p className="text-center mt-3 text-sm text-gray-700">{message}</p>
      )}
    </div>
  );
}
